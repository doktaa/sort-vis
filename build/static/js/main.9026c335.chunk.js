(this["webpackJsonpsort-vis"]=this["webpackJsonpsort-vis"]||[]).push([[0],{131:function(e,t,a){},427:function(e,t,a){"use strict";a.r(t);var n=a(6),s=a.n(n),i=a(10),r=a.n(i),o=(a(131),a(4)),c=a(42),l=(a.p,a(77),a(1)),b=function(e){var t={width:"".concat(100/e.total,"%")},a={height:"".concat(e.num,"px"),backgroundColor:e.color};return Object(l.jsxs)("div",{className:"barContainer",style:t,children:[Object(l.jsx)("div",{className:"bar",style:a})," "]})},u=function(e){var t=e.total;return Object(l.jsx)("div",{className:"graphContainer",children:e.array.map((function(e){return Object(l.jsx)(b,{num:e.value,total:t,color:e.color})}))})},j=a.p+"static/media/xbutton.f939aa43.svg",h=function(e){return Object(l.jsxs)("div",{className:"reflectionsContainer",children:[Object(l.jsx)("img",{className:"xbutton",src:j,onClick:function(){e.click({visibility:"hidden"})}}),Object(l.jsxs)("p",{children:["2021/02/26",Object(l.jsx)("br",{}),"Learnt how to use useState hook thing to save state variables (saving user input)",Object(l.jsx)("br",{}),"using props in components, in this case passing the array through to display in the display area component",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021//02/27",Object(l.jsx)("br",{}),"Finding out random things about file structure and imports  (CSS files and stuff)",Object(l.jsx)("br",{}),"State (context of constantly changing array while being sorted) is confusing, need to understand it",Object(l.jsx)("br",{}),"Dealt with array not updating even though it was being sorted correctly",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021/02/28",Object(l.jsx)("br",{}),"Learnt that javascript arrays are just references and in order to actually clone an array, have to use [...xyz]",Object(l.jsx)("br",{}),"Managed to get sorter working but have to clarify why i had to use [...] syntax for a specific case",Object(l.jsx)("br",{}),"Now that bubble sort is a success, will look at refining current solution before adding more sort methods.",Object(l.jsx)("br",{}),"Changing functionality so that instead of sort button generating and sorting at the same time, split it up so that there's a button to generate an array based on user input, and a separate sort button",Object(l.jsx)("br",{}),"Doing random aesthetic stuff with css here and there",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021/03/02",Object(l.jsx)("br",{}),"Random playing around with a border on the display area, using a variable to determine whether the display area should show the border or not (if array size is 0 then border should not be visible because it shows by default)",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021/03/03",Object(l.jsx)("br",{}),"Running into an issue where button does not seem to update react use states on first click, but only updates on 2nd+ clicks...this is causing the generate array button to fail to render/update the graph unless i click it twice...",Object(l.jsx)("br",{}),"console log is telling me the usestate setter method for sortArray is not actually updating it.",Object(l.jsx)("br",{}),"Research tells me that react hooks run asynchronously which would explain why it wasn't immediately updating the array.",Object(l.jsx)("br",{}),"Used useffect() to resolve this issue so that react renders the array only after it changes (so wait till sortArray changes before updating)",Object(l.jsx)("br",{}),"ternary operators are sick",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021/03/04",Object(l.jsx)("br",{}),"Created the reflections bit so i can access logs on the app. While creating this, used a hook for visibility of the reflections overlay, which involved passing the hook function as a prop to the Reflections object.",Object(l.jsx)("br",{}),"Learnt that when doing so, have to use the passed in hook function (props) within arrow function in the onClick instead of calling the props directly from onClick",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021/03/06",Object(l.jsx)("br",{}),"Implementing quicksort algorithm without looking up code for extra challenge, not sure if I should've jumped the gun going from bubble sort to quicksort just like that...",Object(l.jsx)("br",{}),"Quicksort implemented, now need to animate it",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021/03/08",Object(l.jsx)("br",{}),"figuring out how to animate quicksort, implemented animation changes every time a sort happens but i realised this is not that great since it doesn't represent the recursiveness of quicksort",Object(l.jsx)("br",{}),"in order for quick sort to make sense, i need to start changing bar colours while animating so that i can see comparisons etc, this would make it useful in general for every sorting algorithm.",Object(l.jsx)("br",{}),"To achieve this, modified array from numerical array to array that holds objects, which then contains the numerical value along with a colour value. Means i had to use .map a lot more whenever it was necessary",Object(l.jsx)("br",{}),Object(l.jsx)("br",{}),"2021/03/09",Object(l.jsx)("br",{}),'Made a sensible modification to the animation of Bubble Sort to indicate sorted bars as green, budget "hard-codey" solution but will modify to a better one later on',Object(l.jsx)("br",{}),"Animating quicksort was aids, wanted to indicate sorted bars as green so turned the array from a numerical array into an array containing objects with a number and color that was passed through the whole quicksort process but found out that OBJECTS WITHIN ARRAYS ACT AS REFERENCES AND THUS CANNOT BE CLONED IN A SHALLOW COPY.",Object(l.jsx)("br",{}),"Modified to using a separate array to just store sorted bar indexes :( much boring such zzz"]})]})};a(428);var d=function(){var e,t,a=Object(n.useState)(0),s=Object(c.a)(a,2),i=s[0],b=s[1],j=Object(n.useState)([]),d=Object(c.a)(j,2),g=d[0],f=d[1],m=Object(n.useState)({visibility:"hidden"}),O=Object(c.a)(m,2),p=O[0],x=O[1],v=Object(n.useState)({visibility:"hidden"}),y=Object(c.a)(v,2),w=y[0],k=y[1],C=[];function N(e,t,a,n){setTimeout((function(){if("swapped"!==n){var t=a[e];a[e]=a[e+1],a[e+1]=t;var s=Object(o.a)(a).map((function(e,t){return{value:e,color:t>a.length-n?"green":"white"}}));console.log("bubble pre display",s,n),f(s)}else{var i=Object(o.a)(a).map((function(e,t){return{value:e,color:"green"}}));f(i)}}),t)}function S(e,t,a,n){if(t<a){var s=function(e,t,a,n){console.log("arr",e,"leftidx",t,"rightidx",a);var s=e[a],i=t,r=a;console.log(s,i,r);for(;i<r;){for(;e[i]<s;)E(Object(o.a)(e),i,a,"compare",Object(o.a)(n)),i++;for(;e[r]>=s&&r!=t;)E(Object(o.a)(e),r,a,"compare",Object(o.a)(n)),r--;i<r&&(A(e,i,r,n),i=t,r=a)}return A(e,i,a,n),n.push(i),console.log("sorted nums",n),i}(e,t,a,n);console.log("array post partition",e,"new pivot",s,"left index",t,"right index",a),S(e,t,s-1,n),S(e,s+1,a,n)}else n.push(t,a),E(Object(o.a)(e),0,0,"swap",Object(o.a)(n)),console.log(n)}function A(e,t,a,n){var s=e[t];e[t]=e[a],e[a]=s,E(Object(o.a)(e),0,0,"swap",Object(o.a)(n))}function E(e,a,n,s,i){setTimeout((function(){if("compare"===s){var t=Object(o.a)(e).map((function(e,t){return{value:e,color:t===a||t===n?"red":i.indexOf(t)>=0?"green":"white"}}));f(t)}else if("swap"===s){var r=Object(o.a)(e).map((function(e,t){return{value:e,color:i.indexOf(t)>=0?"green":"white"}}));f(r)}}),t+=5)}return Object(n.useEffect)((function(){r.a.render(Object(l.jsx)(u,{array:g,total:i}),document.getElementById("displayArea"))}),[g]),Object(l.jsxs)("div",{className:"section is-large sectionMain",children:[Object(l.jsx)("div",{className:"reflections",style:w,children:Object(l.jsx)(h,{click:k})}),Object(l.jsxs)("div",{className:"columns columnContainer",children:[Object(l.jsx)("div",{className:"column"}),Object(l.jsxs)("div",{className:"column is-four-fifths is-centered has-text-centered mainColumn",children:[Object(l.jsxs)("button",{className:"button is-info is-light reflectionsButton ",onClick:function(){k({visibility:"visible"})},children:["Please ",Object(l.jsx)("b",{children:"CLICK HERE"})," to view a log of my project learning updates and reflections :)",Object(l.jsx)("br",{}),"This sorting visualiser project is still a work in progress!"]}),Object(l.jsx)("span",{className:"tag is-info is-light is-large margin1",children:"Please select array size"}),Object(l.jsx)("input",{className:"input is-info is-rounded margin1",type:"number",id:"barCountInput",onChange:function(e){b(e.target.value>500?500:e.target.value)}}),Object(l.jsx)("button",{className:"margin1 button is-info is-light is-normal is-rounded",onClick:function(){x({visibility:0!==i?"visible":"hidden"});for(var e=0;e<i;e++)C.push(Math.floor(Math.random()*window.innerHeight*.4));console.log("initial array",C);var t=[].concat(C).map((function(e){return{value:e,color:"white"}}));f(t)},children:"CREATE ARRAY"}),Object(l.jsxs)("div",{className:"alignBottom",children:[Object(l.jsx)("div",{id:"displayArea",style:p}),Object(l.jsx)("button",{onClick:function(){var a=Object(o.a)(g).map((function(e){return e.value}));t=0;var n=1;do{e=!1;for(var s=0;s<a.length;s++)if(a[s+1]<a[s]){N(s,t+=20,Object(o.a)(a),n);var i=a[s];a[s]=a[s+1],a[s+1]=i,e=!0}n+=1,!1===e&&N(0,t,Object(o.a)(a),"swapped")}while(!0===e)},children:"Bubble Sort"}),Object(l.jsx)("button",{onClick:function(){var e=Object(o.a)(g).map((function(e){return e.value}));t=0,S(e,0,e.length-1,[])},children:"Quick Sort"})]})]}),Object(l.jsx)("div",{className:"column"})]})]})},g=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,429)).then((function(t){var a=t.getCLS,n=t.getFID,s=t.getFCP,i=t.getLCP,r=t.getTTFB;a(e),n(e),s(e),i(e),r(e)}))};r.a.render(Object(l.jsx)(s.a.StrictMode,{children:Object(l.jsx)(d,{})}),document.getElementById("root")),g()},77:function(e,t,a){}},[[427,1,2]]]);
//# sourceMappingURL=main.9026c335.chunk.js.map